from typing import List, Tuple
from org.telegram.messenger import R, LocaleController, AndroidUtilities, MessageObject
from org.telegram.tgnet import TLRPC
from client_utils import get_send_messages_helper, show_error_bulletin, show_info_bulletin, get_last_fragment, get_account_instance, send_request, get_user_config, get_messages_controller, send_message
import json

__id__ = "depplugin"
__name__ = "–¥–µ–ø–∞–π –º—Ä–∞–∑—å"
__version__ = "1.0.1"
__description__ = "–¥–µ–ø–Ω–∏ —Å–≤–æ–µ–≥–æ –¥—Ä—É–≥–∞"
__author__ = "@hpdevfox"
__min_version__ = "11.9.0"
__icon__ = "twemojitg/6"

class DepPlugin(BasePlugin):
    def on_send_message_hook(self, account, params) -> HookStrategy:
        if not isinstance(params.message, str) or not params.message.startswith(".dep "):
            return HookResult()

        command = params.message.replace(".dep ", "").split()
        count = command[command.__len__()-1]
        
        target = ""
        if(count.isnumeric()):
            command.remove(count)
        else:
            count = 3


        for _i in command:
            target += _i + " "

        for _ in range(int(count)): #–º—è—É, –º–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ —á—Ç–æ —è —Å–º–æ–≥ –ø—Ä–∏–Ω–µ—Å—Ç–∏ –ø–æ–ª—å–∑—É —ç—Ç–æ–º—É –æ–±—â–µ—Å—Ç–≤—É :<
            send_message({
                "peer": params.peer,
                "replyToMsg": params.replyToMsg,
                "replyToTopMsg": params.replyToTopMsg,
                "message": "üé∞"
            })

        params.message = f"–¥–µ–ø–∞—é {target}"
        return HookResult(strategy=HookStrategy.MODIFY, params=params) 
